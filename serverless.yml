# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: serverless-urls

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-stack-output
  
custom:
  tableName: 'urls-table-${self:provider.stage}'
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
  output:
    file: .build/stack.json

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  environment:
    URLS_TABLE: ${self:custom.tableName}  # RC: Added ENV Variables to avoid hardcoded table names
    AWS_DEPLOY_REGION: ${self:provider.region}
  imRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource:
        # RC: Removed hardcoded table ARN and replaced by cloud formation Intrinsic Function Reference. 
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html
        - { "Fn::GetAtt": ["UrlsDynamoDBTable", "Arn" ] }
        - { "Fn::Join": [ "/", [ 
           { "Fn::GetAtt": ["UrlsDynamoDBTable", "Arn" ] }, "index", "ShortCodeIndex" 
          ]]}

# The `functions` block defines what code to deploy
functions:
  createUrl: # RC: Changed the name of this function to match the handler for naming convention uniformity
    handler: createUrl.run
    events:
      - http:
          path: url # RC: Changed the path to follow REST best practices
          method: post
  getUrl:
    handler: getUrl.run
    events:
      - http:
          path: url/{shortCode}
          method: get
  statistics:
    handler: getStatistics.run
    events:
      - http:
          path: statistics/{shortCode}
          method: get

resources:
  Resources:
    UrlsDynamoDBTable: 
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: shortCode
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - 
            IndexName: ShortCodeIndex
            KeySchema:
              - 
                AttributeName: shortCode
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1    
